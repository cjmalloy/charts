apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "jasper.fullname" . }}
  labels:
    {{- include "jasper.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "jasper.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "jasper.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "jasper.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
          env:
            - name: SERVER_PORT
              value: "8081"
            - name: JASPER_HEAP
              value: {{ .Values.heap }}
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.config.profiles }}
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://{{ .Values.postgresql.fullnameOverride }}:5432/{{ .Values.postgresql.auth.database }}
            - name: SPRING_DATASOURCE_USERNAME
              value: postgres
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.fullnameOverride }}
                  key: postgres-password
            - name: JASPER_SCRAPE_DELAY_MIN
              value: {{ .Values.config.scrapeDelayMin | quote }}
            - name: JASPER_SCRAPE_INTERVAL_MIN
              value: {{ .Values.config.scrapeIntervalMin | quote }}
            - name: JASPER_PULL_DELAY_MIN
              value: {{ .Values.config.pullDelayMin | quote }}
            - name: JASPER_PULL_INTERVAL_MIN
              value: {{ .Values.config.pullIntervalMin | quote }}
            - name: JASPER_MIN_ROLE
              value: {{ .Values.config.minRole }}
            - name: JASPER_DEFAULT_ROLE
              value: {{ .Values.config.defaultRole }}
            - name: JASPER_ALLOW_LOCAL_ORIGIN_HEADER
              value: {{ .Values.config.allowLocalOriginHeader | quote }}
            - name: JASPER_ALLOW_USER_TAG_HEADER
              value: {{ .Values.config.allowUserTagHeader | quote }}
            - name: JASPER_ALLOW_USER_ROLE_HEADER
              value: {{ .Values.config.allowUserRoleHeader | quote }}
            - name: JASPER_ALLOW_AUTH_HEADERS
              value: {{ .Values.config.allowAuthHeaders | quote }}
            - name: JASPER_OVERRIDE_SECURITY_MODE
              value: {{ .Values.config.override.security.mode }}
            - name: JASPER_OVERRIDE_SECURITY_CLIENT_ID
              value: {{ .Values.config.override.security.clientId }}
            {{- if .Values.config.override.security.clientSecret }}
            - name: JASPER_OVERRIDE_SECURITY_BASE64_SECRET
              valueFrom:
                secretKeyRef:
                  name: jasper-jwt-config
                  key: override
            {{- end }}
            - name: JASPER_OVERRIDE_SECURITY_JWKS_URI
              value: {{ .Values.config.override.security.jwksUri }}
            - name: JASPER_OVERRIDE_SECURITY_USERNAME_CLAIM
              value: {{ .Values.config.override.security.usernameClaim }}
            - name: JASPER_OVERRIDE_SECURITY_TOKEN_ENDPOINT
              value: {{ .Values.config.override.security.tokenEndpoint }}
            - name: JASPER_OVERRIDE_SECURITY_SCIM_ENDPOINT
              value: {{ .Values.config.override.security.scimEndpoint }}
            - name: JASPER_SSH_CONFIG_NAMESPACE
              value: {{ .Values.config.sshConfigNamespace | quote }}
            - name: JASPER_SSH_CONFIG_MAP_NAME
              value: {{ .Values.config.sshConfigMapName | quote }}
            - name: JASPER_MAIL_HOST
              value: {{ .Values.config.mail.host | quote }}
            - name: JASPER_MAIL_PORT
              value: {{ .Values.config.mail.port | quote }}
            - name: JASPER_MAIL_PROPERTIES_MAIL_SMTP_LOCALHOST
              value: {{ .Values.config.mail.localhost | quote }}
          volumeMounts:
            - name: storage
              mountPath: "/var/lib/jasper"
          {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
          {{- end }}
          livenessProbe:
            initialDelaySeconds: 90
            failureThreshold: 10
            httpGet:
              path: /management/health/liveness
              port: http
          readinessProbe:
            initialDelaySeconds: 15
            httpGet:
              path: /management/health/readiness
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.smtp.enabled }}
        - name: smtp-hook
          image: "{{ .Values.smtp.repository }}:{{ .Values.smtp.tag }}"
          imagePullPolicy: {{ .Values.smtp.pullPolicy }}
          ports:
            - name: smtp
              containerPort: 25
              protocol: TCP
          env:
            - name: WEBHOOK
              value: http://localhost:8081/api/v1/webhook/smtp?origin={{ .Values.smtp.origin }}
            {{- if .Values.smtp.headers }}
            - name: HEADERS
              value: {{ .Values.smtp.headers | quote }}
            {{- end }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
    {{- if .Values.persistence.enabled }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "jasper.fullname" .) }}
    {{- else }}
        - name: storage
      {{- if .Values.persistence.inMemory.enabled }}
          emptyDir:
            medium: Memory
        {{- if .Values.persistence.inMemory.sizeLimit }}
            sizeLimit: {{ .Values.persistence.inMemory.sizeLimit }}
        {{- end -}}
      {{- else }}
          emptyDir: {}
      {{- end -}}
    {{- end -}}
